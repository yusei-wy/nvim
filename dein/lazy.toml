[[plugins]] # dein.vim command
repo = 'haya14busa/dein-command.vim'
on_cmd = 'Dein'

[[plugins]] # sidebar
repo = 'scrooloose/nerdtree'
hook_add = '''
  map <C-e> :NERDTreeToggle<CR>
'''

[[plugins]] # autocomplete
repo = 'Shougo/deoplete.nvim'
on_event = 'InsertCharPre'
hook_source = '''
let g:deoplete#enable_at_startup = 1
let g:deoplete#auto_complete_delay = 0
let g:deoplete#auto_complete_start_length = 1
let g:deoplete#enable_camel_case = 0
let g:deoplete#enable_ignore_case = 0
let g:deoplete#enable_refresh_always = 0
let g:deoplete#enable_smart_case = 1
let g:deoplete#file#enable_buffer_path = 1
let g:deoplete#max_list = 10000
inoremap <expr><tab> pumvisible() ? "\<C-n>" :
      \ neosnippet#expandable_or_jumpable() ?
      \    "\<Plug>(neosnippet_expand_or_jump)" : "\<tab>"
'''
on_i = 1

[[plugins]]
repo = 'Shougo/neosnippet'
hook_source = '''
  imap <C-k> <Plug>(neosnippet_expand_or_jump)
  smap <C-k> <Plug>(neosnippet_expand_or_jump)
  xmap <C-k> <Plug>(neosnippet_expand_target)
  if has('conceal')
    set conceallevel=2 concealcursor=niv
  endif
'''
on_i  = 1
on_ft = ['snippet']
depends = ['neosnippet-snippets']

[[plugins]] # C autocomplete
repo = 'zchee/deoplete-clang'
depends = ['deoplete']
on_ft = ['c', 'cpp', 'cmake']
hook_source = '''
echo 'on'
let g:deoplete#sources#clang#libclang_path = '/usr/lib/llvm-3.8/lib/libclang-3.8.so.1'
let g:deoplete#sources#clang#clang_header = '/usr/include/clang'
'''
# [[plugins]]
# repo = 'tweekmonster/deoplete-clang2'

[[plugins]] # git client
repo = 'tpope/vim-fugitive'
hook_add = '''
nmap [figitive] <Nop>
map <Leader>g [figitive]
nmap <silent> [figitive]s :<C-u>Gstatus<CR>
nmap <silent> [figitive]d :<C-u>Gdiff<CR>
nmap <silent> [figitive]b :<C-u>Gblame<CR>
nmap <silent> [figitive]l :<C-u>Glog<CR>
'''

[[plugins]] # linter
repo = 'w0rp/ale'

[[plugins]] # formatter
repo = 'rhysd/vim-clang-format'
hook_source = '''
autocmd FileType c,cpp,cmake ClangFormatAutoEnable
'''
on_ft = ['c', 'cpp', 'cmake']
