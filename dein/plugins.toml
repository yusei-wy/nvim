[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]] # hybrid
repo = 'joshdick/onedark.vim'
hook_add = '''
" "set background=dark
" colorscheme の設定は source 後に行う必要があるので VimEnter で行う
" ただし Colorscheme イベントの発生が抑制されないように nested をつける
au MyAutoCmd VimEnter * nested colorscheme onedark
'''

[[plugins]] # ステータスライン
repo = 'vim-airline/vim-airline'
hook_add = '''
" パワーラインでかっこよく
" let g:airline_powerline_fonts = 1
" タブバーをかっこよく
let g:airline#extensions#tabline#enabled = 1
" Lintツールによるエラー、警告を表示(ALEの拡張)
let g:airline#extensions#ale#enabled = 1
let g:airline#extensions#ale#error_symbol = 'E:'
let g:airline#extensions#ale#warning_symbol = 'W:'
'''
[[plugins]]
repo = 'vim-airline/vim-airline-themes'

[[plugins]] # Toml
repo = 'cespare/vim-toml'

[[plugins]] # Japanese doc
repo = 'vim-jp/vimdoc-ja'
hook_add = '''
  set helplang=ja,en
'''

[[plugins]] # ファイルランチャー
repo = 'Shougo/denite.nvim'
hook_add = '''
" Denite用プレフィックス
nmap [denite] <Nop>
map <C-j> [denite]

" プロジェクト内のファイル検索
nmap <silent> [denite]<C-P> :<C-u>Denite file_rec -highlight-mode-insert=Search<CR>
" バッファに展開中のファイル検索
nmap <silent> [denite]<C-B> :<C-u>Denite buffer -highlight-mode-insert=Search<CR>
" ファイル内の関数/クラス等の検索
nmap <silent> [denite]<C-O> :<C-u>Denite outline -highlight-mode-insert=Search<CR>
" dotfiles配下をカレントにしてfile_rec起動
nmap <silent> [denite]<C-V> :<C-u>call denite#start([{'name': 'file_rec', 'args': ['~/.dotfiles']}]) -highlight-mode-insert=Search=Search<CR>

" 上下移動を<C-N>, <C-P>
call denite#custom#map('normal', '<C-N>', '<denite:move_to_next_line>')
call denite#custom#map('normal', '<C-P>', '<denite:move_to_previous_line>')
call denite#custom#map('insert', '<C-N>', '<denite:move_to_next_line>')
call denite#custom#map('insert', '<C-P>', '<denite:move_to_previous_line>')
" 入力履歴移動を<C-J>, <C-K>
call denite#custom#map('insert', '<C-J>', '<denite:assign_next_text>')
call denite#custom#map('insert', '<C-K>', '<denite:assign_previous_text>')
" 横割りオープンを`<C-S>`
call denite#custom#map('insert', '<C-S>', '<denite:do_action:split>')
" 縦割りオープンを`<C-I>`
call denite#custom#map('insert', '<C-I>', '<denite:do_action:vsplit>')
" タブオープンを`<C-O>`
call denite#custom#map('insert', '<C-O>', '<denite:do_action:tabopen>')

" file_rec検索時にfuzzymatchを有効にし、検索対象から指定のファイルを除外
call denite#custom#source(
    \ 'file_rec', 'matchers', ['matcher_fuzzy', 'matcher_project_files', 'matcher_ignore_globs'])

" 検索対象外のファイル指定
call denite#custom#filter('matcher_ignore_globs', 'ignore_globs',
    \ [ '.git/', '.ropeproject/', '__pycache__/',
    \   'venv/', 'images/', '*.min.*', 'img/', 'fonts/'])
'''

[[plugins]] # git diff
repo = 'airblade/vim-gitgutter'

[[plugins]] # プログラミング言語の強調表示など
repo = 'sheerun/vim-polyglot'
hook_add = '''
" Vue 効率的に強調
autocmd FileType vue syntax sync fromstart
'''

[[plugins]] # 閉じ括弧の補完
repo = 'jiangmiao/auto-pairs'

[[plugins]] # 文法チェッカ
repo = 'scrooloose/syntastic'

[[plugins]] # highlight color code
repo = 'lilydjwg/colorizer'

[[plugins]] # typescript
repo = 'mhartington/nvim-typescript'
hook_add = '''
let g:nvim_typescript#vue_support = 1
'''
